name: CI Pipeline

on:
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install wemake-python-styleguide mypy pytest

    - name: Run wemake-python-styleguide
      id: lint
      continue-on-error: true
      run: |
        flake8 . --format=html --htmldir=lint-report
        if [ -f "lint-report/index.html" ]; then
          echo "lint_failed=true" >> $GITHUB_ENV
        fi

    - name: Run mypy type checking
      id: mypy
      continue-on-error: true
      run: |
        mypy . || echo "mypy_failed=true" >> $GITHUB_ENV

    - name: Run tests
      id: test
      continue-on-error: true
      run: |
        pytest --tb=short || echo "test_failed=true" >> $GITHUB_ENV

    - name: Generate lint report artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: lint-report-python-${{ matrix.python-version }}
        path: lint-report/
        if-no-files-found: ignore

    - name: Set pipeline status
      run: |
        if [ "${{ env.lint_failed }}" = "true" ] || [ "${{ env.mypy_failed }}" = "true" ] || [ "${{ env.test_failed }}" = "true" ]; then
          echo "pipeline_status=failed" >> $GITHUB_ENV
        else
          echo "pipeline_status=success" >> $GITHUB_ENV
        fi

    - name: Send Telegram notification
      if: always()
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          ${{ github.event.repository.name }}: Pipeline for ${{ github.sha }} finished ${{ env.pipeline_status == 'success' && 'successfully' || 'with error' }}!
          ${{ env.lint_failed == 'true' && 'wemake-python-styleguide failed' || '' }}
          ${{ env.mypy_failed == 'true' && 'mypy type checking failed' || '' }}
          ${{ env.test_failed == 'true' && 'tests failed' || '' }}
