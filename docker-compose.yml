name: notifications-stack

networks:
  notification-network:
    driver: bridge

volumes:
  pg_data:
  rabbitmq_data:

services:

  postgres:
    image: postgres:15-alpine
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-notifications}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - notification-network
    volumes:
      - pg_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - notification-network

  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    container_name: rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS:-guest}
    ports:
      - "5672:5672"
      - "15672:15672" # management UI
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 10s
      timeout: 5s
      retries: 15
    networks:
      - notification-network
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq


  admin:

    build:
      context: .
      dockerfile: services/admin_panel/Dockerfile
    container_name: admin-panel
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8001:8000"
    networks:
      - notification-network

  notification_api:
    build:
      context: .
      dockerfile: services/notification_api/Dockerfile
    container_name: notification-api
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS:-guest}
      LINK_SHORTENER_BASE_URL: ${LINK_SHORTENER_BASE_URL:-http://link-shortener:8000}
      WEBSOCKET_SECRET: ${WEBSOCKET_SECRET:-dev-secret}
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "8002:8000"
    networks:
      - notification-network

  link-shortener:
    build:
      context: .
      dockerfile: services/link_shortener/Dockerfile
    container_name: link-shortener
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_started
    ports:
      - "8001:8000"
    networks:
      - notification-network

  # --- Workers & Realtime ---

  worker:
    build:
      context: .
      dockerfile: services/worker/Dockerfile
    container_name: notification-worker
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS:-guest}
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - notification-network

  websocket-server:
    build:
      context: .
      dockerfile: services/websocket-server/Dockerfile
    container_name: notification-websocket
    restart: unless-stopped
    env_file:
      - .env
    environment:
      WEBSOCKET_SECRET: ${WEBSOCKET_SECRET:-dev-secret}
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - "8004:8000"
    networks:
      - notification-network
